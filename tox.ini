[flake8]
max-line-length = 100

[tox]
skipsdist = True
skip_missing_interpreters = True
envlist = fmt, lint, unit

[vars]
all_path = {[vars]src_path} {[vars]tst_path}
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/

[testenv]
passenv =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS
    KUBECONFIG
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1

[testenv:lint]
commands =
    # uncomment the following line if this charm owns a lib
    # codespell {[vars]lib_path}
    codespell {toxinidir}/. --skip {toxinidir}/./.git --skip {toxinidir}/./.tox \
      --skip {toxinidir}/./build --skip {toxinidir}/./lib --skip {toxinidir}/./venv \
      --skip {toxinidir}/./.mypy_cache \
      --skip {toxinidir}/./icon.svg --skip *.json.tmpl
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}
deps =
    -r requirements-lint.txt
description = Check code against coding style standards

[testenv:unit]
commands =
    coverage run --source={[vars]src_path} \
        -m pytest --ignore={[vars]tst_path}integration -vv --tb native {posargs}
    coverage report
deps =
    -r requirements-unit.txt
description = Run unit tests

[testenv:integration]
commands = 
    pytest -v --tb native --asyncio-mode=auto {[vars]tst_path}integration/test_deploy_runners.py --keep-models --log-cli-level=INFO -s {posargs}
    pytest -v --tb native --asyncio-mode=auto {[vars]tst_path}integration/test_charm.py --log-cli-level=INFO -s {posargs}
deps =
    -r requirements-integration.txt
description = Run integration tests

[testenv:bundle-test]
commands =
    pytest -v --tb native --asyncio-mode=auto {[vars]tst_path}integration/test_bundle.py --keep-models --log-cli-level=INFO -s {posargs}
deps = 
    aiohttp
    pytest-operator
    ops>=2.3.0
    juju==3.0.4
    zenml==0.52.0
description = Run bundle test