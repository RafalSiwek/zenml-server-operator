# reusable workflow triggered by other actions
name: CI

on:
  workflow_call:
    secrets:
      CHARMCRAFT_CREDENTIALS:
        required: true

jobs:
  lib-check:
    name: Check libraries
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check libs
        uses: canonical/charming-actions/check-libraries@2.3.0
        with:
          credentials: "${{ secrets.CHARMCRAFT_CREDENTIALS }}"
          github-token: "${{ secrets.GITHUB_TOKEN }}"

  lint:
    name: Lint Check
    runs-on: ubuntu-20.04

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt-get install python3-pip tox

      - name: Lint code
        run: tox -e lint

  unit:
    name: Unit Test
    runs-on: ubuntu-20.04

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt-get install python3-pip tox

      - name: Run unit tests
        run: tox -e unit

  integration:
    name: Integration tests (microk8s)
    runs-on: ubuntu-20.04
    steps:
      - name: Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@v1.8.7
        with:
          comment_on_pr: "false"
      - name: Maximise GH runner space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 40960
          remove-dotnet: "true"
          remove-haskell: "true"
          remove-android: "true"
          remove-codeql: "true"
          remove-docker-images: "true"
      - uses: actions/checkout@v2

      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          juju-channel: "3.1/stable"
          bootstrap-options: "--agent-version=2.9.34"
          provider: microk8s
          channel: 1.28-strict/stable

      - name: Run integration tests
        run: sg snap_microk8s -c "tox -vve integration -- --model testing --keep-models"

      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        if: failure()
        with:
          limit-access-to-actor: true
          limit-access-to-users: taurus-forever

      # On failure, capture debugging resources
      - name: Get all
        run: kubectl get all -A
        if: failure()

      - name: Get juju status
        run: juju status
        if: failure()

      - name: Get workload logs
        run: kubectl logs --tail 100 -ntesting -lapp.kubernetes.io/name=zenml-server
        if: failure()

      - name: Get container logs
        run: kubectl logs --tail 100 -ntesting -lapp.kubernetes.io/name=zenml-server -czenml-server
        if: failure()

      - name: Describe zenml pod
        run: kubectl describe po -ntesting -lapp.kubernetes.io/name=zenml-server
        if: failure()

      - name: Get jobs
        run: kubectl get jobs -ntesting
        if: failure()

      - name: Get mysql workload logs
        run: kubectl logs --tail 100 -ntesting -lapp.kubernetes.io/name=mysql-k8s
        if: failure()

      - name: Describe mysql pod
        run: kubectl describe po -ntesting -lapp.kubernetes.io/name=mysql-k8s
        if: failure()

      - name: Get mysql container logs
        run: kubectl logs --tail 100 -ntesting -lapp.kubernetes.io/name=mysql-k8s -cmysql
        if: failure()
